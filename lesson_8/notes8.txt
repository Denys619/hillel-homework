ПЛАН НА ЗАНЯТТЯ

+ бранчінг
+ мердж
+ додавання змін по патчах
+ мердж конфлікти
- пулл реквести
- рефлог
+ stash
- git rebase -i
- git cherry-pick
- Відкатування змін: різниця між reset & revert. force push.

Мердж - це процес зливання двох віток (бранчів) у один результуючий коміт.

`git branch -v` - показати всі бранчі, які існують у гіті на даний момент, плюс хеши (ідентифікатори) комітів, на яких знаходяться ці вітки (і повідомлення цього коміта).

`git branch <new branch name>` - створює нову локальну бранчу з імям <new branch name>. 
УВАГА: ця команда не створює ремоунт бранчів! Для створення віддаленої бранчі треба запушити вашу нову локальну до GitHub/GitLab.


git checkout <branch name> - перейти на бранчу <branch name>, яка ВЖЕ ІСНУЄ.
git checkout -b <branch name> - зробити дві операції: створити бранчу <branch name> (аналогічно команді git branch <branch name> + перейти на цю бранчу після її створення (аналогчно команді git checkout <branch name>)).
git checkout <file or folder name> - відкатити стан файла або папки до останнього закоміченого стану (наприклад, якщо ви зробили якісь невдалі зміни і хочете відкотитися до стану останнього коміту).

`git add .` - '.' у даному контексті - це Башівська крапка, яка значить "поточна папка". Ви таким чином кажете гіту "додай мені до стейджингу все, що є у поточній папці." 


git merge <branch name> - мерджить (зливає) бранчу <branch name> з ТІЄЮ, НА ЯКІЙ ВИ ЗАРАЗ ЗНАХОДИТЕСЬ (!!!)

`git push --all` - пушить ВСІ зміни, що є у вас локально (навіть якщо це декілька різних бранчів) 


:q - вийти з vim або з вьювера less (який використовується у команді git diff та ще деяких Юніксових командах)


`git add -p` - це додавання змін до стейджингу "по патчах" (ще називається hunk). Тобто це додавання лише тих вибіркових змін, інтерактивно, на які гіт у вас спитає підтвердження, і ви явно їх підвердите.


stash - "заначка" - тимчасовий "карман" для зберігання змінних, які вам заважають (конфліктують з якимись бранчами, на які ви хочете перейти), або в яких ви не впевнені (хочете зберігти їх на майбутнє, але не знаєте напевно, чи вони вам знадобляться).

git stash push/git stash add - додає новий стеш з вашими незастейдженими змінами до стешу

git stash list - показує список всіх стешів, які доступні на даний момент.

git stash drop <stash ID> - команда, що видаляє конкретний стеш з айдішником <stash ID>. Айдішник вашого конкретного стешу можна подивитися у виводі команди `git stash list`.


workflow (англ.) - структурований робочий процес, яким користується команда або компанія при роботі над якимось проектом
git workflow - загальноприйнятий і загально відомий процес роботи з гітом у типовій компанії або команді.

pull request (GitLab - Merge Request) - це запит на злиття вашої робочої бранчі з основною.
Для кожного розробника, і для кожної окремої фічі (функціональності) зазвичай створюється окрема бранча. Такі бранчі називаються feature branch. 


`git fetch --prune origin` - підхоплює всі зміни до вашого ремоуту у вашому локальному репозиторії.


git pull - "синхронізує" зміни у локальній бранчі з відповідною віддаленою бранчею (але тільки вверх). Якщо у вас є якісь зміни у локальній бранчі, які знаходяться над (попереду) змін у ремоуті, тоді вам треба навпаки пушити у ремоут.