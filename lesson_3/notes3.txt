ПЛАН НА ЗАНЯТТЯ

Різні способи передачі (та представлення) функцій
1. + Вказівники на функції (Стандартний С-шний спосіб)
2. + lambda functions 
3. std::function
4. Функції як темплейтні параметри.


1. Звичайні вказівники на функції:
+ Найлегші (за "вагою" для програми) та найшвидші. 
+ Існують і на С, і на С++.
- Не універсальні (не можуть приймати функції різних типів, та не можуть універсально використовуватися у багатьох різних контекстах, як інші типи, які ми роздивимось).

Способи обявити псевдонім типу "вказівник на функцію":
1. С - typedef int (*BinaryFunc)(int, int);
2. С++ - using BinaryFunc = int (*)(int, int); // C++ style

lambda function - анонімна функція (функція, яка не має імя, вона існує тільки поки існує змінна, яка її зберігає).
lambda функції здебільшого використовуються як "одноразові" маленькі функції для моментальної передачі до іншого алгоритму (#include <algorithm>) як параметр.

capture (захват змінних) - це можливість лямбди "захопити" якусь змінну "ззовні" для роботи у своєму тілі.

Типи захвату:
по значенню: [=](){};
по посиланню: [&](){};
захват індивідуальних змінних: 
[var](){} - захоплення змінної з іменем var по значенню
[&var](){} - захоплення змінної з іменем var по посиланню.


higher order functions (функції вищого порядку) - це функції, які можуть викликатися "з функціями у параметрі". Тобто функції, які самостійно викликають інші функції.
